@using Bloggable.Web.Areas.Administration.Controllers
@using Bloggable.Web.Models.Administration.Posts.ViewModels

@{
    ViewBag.Title = "Posts (with comments) administration";
}

<h2 class="text-center bottom-buffer">@ViewBag.Title</h2>

@(Html.KendoGrid<PostGridViewModel, PostsController>(
    m => m.Id,
    c => c.Read(null),
    null,
    null,
    c => c.Destroy(null, null),
    null,
    cols =>
    {
        cols.Bound(m => m.Id).Hidden(true);
        cols.Bound(m => m.Title);
        cols.Bound(m => m.SubTitle).Hidden(true);
        cols.Bound(m => m.Summary);
        cols.Bound(m => m.MergedTags).Sortable(false);
        cols.Bound(m => m.CreatedOn).Hidden(true);
        cols.Bound(m => m.ModifiedOn).Hidden(true);
        cols.Command(m => m.Custom("Show").Click("showPost"));
        cols.Command(m => m.Custom("Edit post").Click("editPost"));
        cols.Command(command => command.Destroy());
    },
    toolbar => toolbar.Custom().Text("Create new post").Action<PostsController>(c => c.Create())
)
.ClientDetailTemplateId("comments-grid"))

<script id="comments-grid" type="text/kendo-template">
    @Html.Partial("_Comments")
</script>

<script>
    function editPost(ev) {
        var baseUrl = '@(Url.Action<PostsController>(c => c.Update((int?)null)))';
        _goToLink(this, ev, baseUrl);
    }

    function showPost(ev) {
        var baseUrl = '@(Url.Action<PostsController>(c => c.Show(null)))';
        _goToLink(this, ev, baseUrl);
    }

    function _goToLink(grid, ev, baseUrl) {
        ev.preventDefault();

        var dataItem = grid.dataItem($(ev.currentTarget).closest('tr'));
        var id = dataItem.get('Id');

        var editUrl = baseUrl + '/' + id;

        window.location = editUrl;
    }
</script>